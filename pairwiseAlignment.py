#!usr/bin/env python3
match = float(input('match score: '))
mismatch = float(input('mismatch score: '))
gap = float(input('gap score: '))
# seqv = input('The first query sequence: ')
# seqh = input('The first query sequence: ')

seqv = 'CTGCAGGACAAAATCTGCCTCGGACATCATGCCGTGTCAAACGGAACCAAAGTAAACACATTAACTGAAAGAGGAG\
TGGAAGTCGTCAATGCAACTGAAACAGTGGAACGAACAAACATCCCCAGGATCTGCTCAAAAGGGAAAAGGACAGTTG\
ACCTCGGTCAATGTGGACTCCTGGGGACAATCACTGGACCACCTCAATGTGACCAATTCCTAGAATTTTCAGCCG\
ATTTAATTATTGAGAGGCGAGAAGGAAGTGATGTCTGTTATCCTGGGAAATTCGTGAATGAAGAAGCTCTGAGGCAA\
ATTCTCAGAGAATCAGGCGGAATTGACAAGGAAGCAATGGGATTCACATACAGTGGAATAAGAACTAATGGAGCAA\
CCAGTGCATGTAGGAGATCAGGATCTTCATTCTATGCAGAAATGAAATGGCTCCTGTCAAACACAGATAATGCTGC\
ATTCCCGCAGATGACTAAGTCATATAAAAATACAAGAAAAAGCCCAGCTCTAATAGTATGGGGGATCCATCATTCCG\
TATCAACTGCAGAGCAAACCAAGCTATATGGGAGTGGAAACAAACTGGTGACAGTTGGGAGTTCTAATTATCAACAA\
TCTTTTGTACCGAGTCCAGGAGCGAGACCACAAGTTAATGGTCTATCTGGAAGAATTGACTTTCATTGGCTAATGCT\
AAATCCCAATGATACAGTCACTTTCAGTTTCAATGGGGCTTTCATAGCTCCAGACCGTGCAAGCTTCCTGAGAGGAAAA\
TCTATGGGAATCCAGAGTGGAGTACAGGTTGATGCCAATTGTGAAGGGGACTGCTATCATAGTGGAGGGACAATAATAA\
GTAACTTGCCATTTCAGAACATAGATAGCAGGGCAGTTGGAAAATGTCCGAGATATGTTAAGCAAAGGAGTCTGCTGCT\
AGCAACAGGGATGAAGAATGTTCCTGAGATTCCAAAGGGAAGAGGCCTATTTGGTGCTATAGCGGGTTTCATTGAAAATG\
GATGGGAAGGCCTAATTGATGGTTGGTATGGTTTCAGACACCAGAATGCACAGGGAGAGGGAACTGCTGCAGATTAC\
AAAAGCACTCAATCGGCAATTGATCAAATAACAGGAAAATTAAACCGGCTTATAGAAAAAACCAACCAACAATTTGAG\
TTGATAGACAATGAATTCAATGAGGTAGAGAAGCAAATCGGTAATGTGATAAATTGGACCAGAGATTCTATAACAGAA\
GTGTGGTCATACAATGCTGAACTCTTGGTAGCAATGGAGAACCAGCATACAATTGATCTGGCTGATTCAGAAATGGAC\
AAACTGTACGAACGAGTGAAAAGACAGCTGAGAGAGAATGCTGAAGAAGATGGCACTGGTTGCTTTGAAATATTTCAC\
AAGTGTGATGATGACTGTATGGCCAGTATTAGAAATAACACCTATGATCACAGCAAATACAGGGAAGAGGCAATGCAAA\
ATAGAATACAGATTGACCCAGTCAAAGAATTC'

seqh = 'ATGAACACTCAAATCCTGGTATTCGCTCTGATTGCGATCATTCCAACAAATGCAGACAAAATCTGCCTCG\
GACATCATGCCGTGTCAAACGGAACCAAAGTAAACACATTAACTGAAAGAGGAGTGGAAGTCGTCAATGCAACTGAAAC\
AGTGGAACGAACAAACATCCCCAGGATCTGCTCAAAAGGGAAAAGGACAGTTGACCTCGGTCAATGTGGACTCCTGGGGA\
CAATCACTGGACCACCTCAATGTGACCAATTCCTAGAATTTTCAGCCGATT\
TAATTATTGAGAGGCGAGAAGGAAGTGATGTCTGTTATCCTGGGAAATTCGTGAATGAAGAAGCTCTGAG\
GCAAATTCTCAGAGAATCAGGCGGAATTGACAAGGAAGCAATGGGATTCACATACAGTGGAATAAGAACT\
AATGGAGCAACCAGTGCATGTAGGAGATCAGGATCTTCATTCTATGCAGAAATGAAATGGCTCCTGTCAA\
ACACAGATAATGCTGCATTCCCGCAGATGACTAAGTCATATAAAAATACAAGAAAAAGCCCAGCTCTAAT\
AGTATGGGGGATCCATCATTCCGTATCAACTGCAGAGCAAACCAAGCTATATGGGAGTGGAAACAAACTG\
GTGACAGTTGGGAGTTCTAATTATCAACAATCTTTTGTACCGAGTCCAGGAGCGAGACCACAAGTTAATG\
GTCTATCTGGAAGAATTGACTTTCATTGGCTAATGCTAAATCCCAATGATACAGTCACTTTCAGTTTCAA\
TGGGGCTTTCATAGCTCCAGACCGTGCAAGCTTCCTGAGAGGAAAATCTATGGGAATCCAGAGTGGAGTA\
CAGGTTGATGCCAATTGTGAAGGGGACTGCTATCATAGTGGAGGGACAATAATAAGTAACTTGCCATTTC\
AGAACATAGATAGCAGGGCAGTTGGAAAATGTCCGAGATATGTTAAGCAAAGGAGTCTGCTGCTAGCAAC\
AGGGATGAAGAATGTTCCTGAGATTCCAAAAGGAAGAGGCCTATTTGGTGCTATAGCGGGTTTCATTGAA\
AATGGATGGGAAGGCCTAATTGATGGTTGGTATGGTTTCAGACACCAGAATGCACAGGGAGAGGGAACTG\
CTGCAGATTACAAAAGCACTCAATCGGCAATTGATCAAATAACAGGAAAATTAAACCGGCTTATAGAAAA\
AACCAACCAACAATTTGAGTTGATAGACAATGAATTCAATGAGGTAGAGAAGCAAATCGGTAATGTGATA\
AATTGGACCAGAGATTCTATAACAGAAGTGTGGTCATACAATGCTGAACTCTTGGTAGCAATGGAGAACC\
AGCATACAATTGATCTGGCTGATTCAGAAATGGACAAACTGTACGAACGAGTGAAAAGACAGCTGAGAGA\
GAATGCTGAAGAAGATGGCACTGGTTGCTTTGAAATATTTCACAAGTGTGATGATGACTGTATGGCCAGT\
ATTAGAAATAACACCTATGATCACAGCAAATACAGGGAAGAGGCAATGCAAAATAGAATACAGATTGACC\
CAGTCAAACTAAGCAGCGGCTACAAAGATGTGATACTTTGGTTTAGCTTCGGGGCATCATGTTTCATACTTCTAGCCATT\
GTAATGGGCCTTGTCTTCATATGTGTAAAGAATGGAAACATGCGGTGCACTATTTGTATATAA'

initMtrx = [[0 for i in range(len(seqh) + 1)] for j in range(len(seqv) + 1)]
routeMtrx = [[0 for i in range(len(seqh) + 1)] for j in range(len(seqv) + 1)]

for i in range(1, len(seqv) + 1):
    initMtrx[i][0] = initMtrx[i - 1][0] + mismatch
    routeMtrx[i][0] = 1

for i in range(1, len(seqh) + 1):
    initMtrx[0][i] = initMtrx[0][i - 1] + mismatch
    routeMtrx[0][i] = -1

for v in range(1, len(seqv) + 1):
    for h in range(1, len(seqh) + 1):

        if seqv[v - 1] == seqh[h - 1]:
            initMtrx[v][h] = max(initMtrx[v - 1][h - 1] + match,\
            initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)

            if ((initMtrx[v][h - 1] + gap) == max(initMtrx[v - 1][h - 1] +\
            match, initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)):
                routeMtrx[v][h] = -1

            elif ((initMtrx[v - 1][h] + gap) == max(initMtrx[v - 1][h - 1] +\
            match, initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)):
                routeMtrx[v][h] = 1

            elif ((initMtrx[v - 1][h - 1] + match) == max(initMtrx[v - 1][h - 1]\
            + match, initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)):
                routeMtrx[v][h] = 0

        else:
            initMtrx[v][h] = max(initMtrx[v - 1][h - 1] + mismatch,\
            initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)

            if ((initMtrx[v][h - 1] + gap) == max(initMtrx[v - 1][h - 1] +\
            mismatch, initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)):
                routeMtrx[v][h] = -1

            elif ((initMtrx[v - 1][h] + gap) == max(initMtrx[v - 1][h - 1] +\
            mismatch, initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)):
                routeMtrx[v][h] = 1

            elif ((initMtrx[v - 1][h - 1] + match) == max(initMtrx[v - 1][h - 1]\
            + mismatch, initMtrx[v][h - 1] + gap, initMtrx[v - 1][h] + gap)):
                routeMtrx[v][h] = 0

# for item in initMtrx:
#     print(item)
# print('\n')
# for item in routeMtrx:
#     print(item)

seqvAligned = ''
seqhAligned = ''

rIdx = len(routeMtrx) - 1
cIdx = len(routeMtrx[1]) - 1

while rIdx >= 1:
    if routeMtrx[rIdx][cIdx] == 0:
        seqvAligned += seqv[rIdx - 1]
        seqhAligned += seqh[cIdx - 1]
        rIdx -= 1
        cIdx -= 1

    elif routeMtrx[rIdx][cIdx] == -1:
        seqvAligned += '-'
        seqhAligned += seqh[cIdx - 1]
        cIdx -= 1

    elif routeMtrx[rIdx][cIdx] == 1:
        seqvAligned += seqv[rIdx - 1]
        seqhAligned += '-'
        rIdx -= 1

print('match = {0}, mismatch = {1}, gap = {2}'.format(match, mismatch, gap))
print(seqvAligned[::-1])
print(seqhAligned[::-1])
